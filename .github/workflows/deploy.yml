name: Test GraphQL

on: [ push, pull_request ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ../id_rsa_test
          sudo chmod 600 ../id_rsa_test
          # echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          ssh-keyscan -H ${{secrets.KNOWN_HOSTS}} > ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_KEY}}
          SSH_KNOWN_HOSTS: ${{secrets.KNOWN_HOSTS}}
      - name: SSH into DO and run
        # run: ./deploy.sh
        run: >
          rsync --progress -avzh --exclude='.git' -e "ssh -i ~/.ssh/id_rsa_test " --rsync-path="rsync" . ubuntu@13.212.177.234:/home/ubuntu/new_graphql
          && ssh -i ../id_rsa_test -tt ubuntu@13.212.177.234
          "mv graphql tmp_graphql && mv new_graphql graphql && rm -rf tmp_graphql && cd graphql && npm install && npm run build && pm2 restart service.json"
        # shell: bash
  docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
      - name: Cache Docker Image Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/graphql
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}
